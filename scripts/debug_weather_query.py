#!/usr/bin/env python3
"""
Debug script to trace weather query processing step by step
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'services', 'api'))

def debug_weather_query():
    """Debug weather query step by step"""
    
    query = "whether the weather is good for growing wheat"
    location = "Punjab"
    crop = "wheat"
    
    print("üîç DEBUGGING WEATHER QUERY STEP BY STEP")
    print("=" * 60)
    print(f"Query: '{query}'")
    print(f"Location: {location}, Crop: {crop}")
    print()
    
    # Step 1: Test coordinator agent identification
    print("STEP 1: Agent Identification")
    print("-" * 30)
    
    from app.coordinator import Coordinator
    coordinator = Coordinator()
    
    relevant_agents = coordinator._identify_relevant_agents(query.lower())
    print(f"Relevant agents: {relevant_agents}")
    
    if "weather" not in relevant_agents:
        print("‚ùå PROBLEM: Weather agent not identified!")
        return
    else:
        print("‚úÖ Weather agent correctly identified")
    
    # Step 2: Test weather agent directly
    print("\nSTEP 2: Weather Agent Direct Test")
    print("-" * 30)
    
    weather_agent = coordinator.agents["weather"]
    try:
        weather_response = weather_agent.process_query(query, location, crop)
        print(f"Weather agent confidence: {weather_response.get('confidence', 0.0)}")
        print(f"Weather agent advice length: {len(weather_response.get('result', {}).get('advice', ''))}")
        print(f"Weather evidence count: {len(weather_response.get('evidence', []))}")
        
        advice = weather_response.get('result', {}).get('advice', '')
        if advice:
            print(f"Weather advice preview: {advice[:200]}...")
        else:
            print("‚ùå PROBLEM: No advice generated by weather agent!")
            
        # Check if using real weather data
        evidence = weather_response.get('evidence', [])
        weather_evidence = [e for e in evidence if 'weather' in e.get('source', '').lower()]
        if weather_evidence:
            print(f"‚úÖ Real weather data sources: {len(weather_evidence)}")
            for we in weather_evidence[:1]:
                print(f"   Sample: {we.get('source')}: {we.get('excerpt', '')[:100]}...")
        else:
            print("‚ùå PROBLEM: No real weather data in evidence!")
            
    except Exception as e:
        print(f"‚ùå PROBLEM: Weather agent failed with error: {e}")
        import traceback
        traceback.print_exc()
        return
    
    # Step 3: Test coordinator synthesis
    print("\nSTEP 3: Coordinator Full Processing")
    print("-" * 30)
    
    try:
        coord_response = coordinator.process_query(query, location, crop)
        print(f"Coordinator confidence: {coord_response.get('confidence', 0.0)}")
        print(f"Agents consulted: {coord_response.get('agents_consulted', [])}")
        print(f"Answer length: {len(coord_response.get('answer', ''))}")
        
        answer = coord_response.get('answer', '')
        if answer:
            print(f"Final answer preview: {answer[:200]}...")
        else:
            print("‚ùå PROBLEM: No final answer generated!")
            
    except Exception as e:
        print(f"‚ùå PROBLEM: Coordinator failed with error: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    debug_weather_query()

